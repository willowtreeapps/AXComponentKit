{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"TODO"}]},{"anchor":"Getting-Started","level":4,"type":"heading","text":"Getting Started"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/Philosophy"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/ScreenModels"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/IntegratingWithViews"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/jubilant-disco-651a42c5.pages.github.io\/testing\/documentation\/axcomponentkittestsupport\/"}]}]}]},{"anchor":"Adding-To-Your-Project","level":4,"type":"heading","text":"Adding To Your Project"},{"type":"paragraph","inlineContent":[{"type":"text","text":"TODO: Explain how to pull in as a Swift Package"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/axcomponentkit"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/AXComponentKit\/documentation\/AXComponentKit","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Modular UI testing framework abstraction that works in concert with XCTest"}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"AXComponentKit","title":"AXComponentKit","symbolKind":"module","role":"collection","modules":[{"name":"AXComponentKit"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Articles","identifiers":["doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/IntegratingWithViews","doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/Philosophy","doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/ScreenModels"],"generated":true},{"title":"Protocols","identifiers":["doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/AXDynamicValue","doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/AXScreen"]},{"title":"Structures","identifiers":["doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/AXComponent","doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/AXDynamicComponent","doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/AXScrollView"]}],"references":{"doc://AXComponentKit/documentation/AXComponentKit/IntegratingWithViews":{"role":"article","title":"Integrating With Views","abstract":[{"type":"text","text":"How to integrate AXComponentKit with SwiftUI "},{"type":"strikethrough","inlineContent":[{"type":"text","text":"and UIKit"}]}],"identifier":"doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/IntegratingWithViews","kind":"article","type":"topic","url":"\/documentation\/axcomponentkit\/integratingwithviews"},"doc://AXComponentKit/documentation/AXComponentKit/AXScreen":{"role":"symbol","title":"AXScreen","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AXScreen"}],"abstract":[{"type":"text","text":"Defines a logical screen that acts as a page model during testing"}],"identifier":"doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/AXScreen","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AXScreen"}],"url":"\/documentation\/axcomponentkit\/axscreen"},"doc://AXComponentKit/documentation/AXComponentKit/ScreenModels":{"role":"article","title":"Setting Up Screen Models","abstract":[{"type":"text","text":"How to add screen models to your project"}],"identifier":"doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/ScreenModels","kind":"article","type":"topic","url":"\/documentation\/axcomponentkit\/screenmodels"},"doc://AXComponentKit/documentation/AXComponentKit/Philosophy":{"role":"article","title":"Philosophy","abstract":[{"type":"text","text":"The design considerations behind AXComponentKit"}],"identifier":"doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/Philosophy","kind":"article","type":"topic","url":"\/documentation\/axcomponentkit\/philosophy"},"doc://AXComponentKit/documentation/AXComponentKit/AXComponent":{"role":"symbol","title":"AXComponent","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AXComponent"}],"abstract":[{"type":"text","text":"Defines a logical automation component that can exist within"},{"type":"text","text":" "},{"type":"text","text":"an application’s view hierarchy. This represents an element with"},{"type":"text","text":" "},{"type":"text","text":"a fully qualified identifier, be it a static element that is predefined,"},{"type":"text","text":" "},{"type":"text","text":"or the result of resolving an "},{"type":"codeVoice","code":"AXDynamicComponent"},{"type":"text","text":" with some value."}],"identifier":"doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/AXComponent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AXComponent"}],"url":"\/documentation\/axcomponentkit\/axcomponent"},"doc://AXComponentKit/documentation/AXComponentKit/AXDynamicComponent":{"role":"symbol","title":"AXDynamicComponent","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AXDynamicComponent"}],"abstract":[{"type":"text","text":"Defines a logical automation component that can exist within"},{"type":"text","text":" "},{"type":"text","text":"an application’s view hierarchy. This represents an element with"},{"type":"text","text":" "},{"type":"text","text":"a partial identifier that gets supplemented at runtime with a generic"},{"type":"text","text":" "},{"type":"text","text":"value."}],"identifier":"doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/AXDynamicComponent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AXDynamicComponent"}],"url":"\/documentation\/axcomponentkit\/axdynamiccomponent"},"doc://AXComponentKit/documentation/AXComponentKit/AXScrollView":{"role":"symbol","title":"AXScrollView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AXScrollView"}],"abstract":[{"type":"text","text":"Defines a logical view that encompasses scrolling behavior in a generic"},{"type":"text","text":" "},{"type":"text","text":"sense. This tells "},{"type":"codeVoice","code":"AXComponentKit"},{"type":"text","text":" that the element in question is"},{"type":"text","text":" "},{"type":"text","text":"scrollable without forcing any heuristic to try and detect the most relevant"},{"type":"text","text":" "},{"type":"text","text":"scroll view."}],"identifier":"doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/AXScrollView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AXScrollView"}],"url":"\/documentation\/axcomponentkit\/axscrollview"},"doc://AXComponentKit/documentation/AXComponentKit":{"role":"collection","title":"AXComponentKit","abstract":[{"type":"text","text":"Modular UI testing framework abstraction that works in concert with XCTest"}],"identifier":"doc:\/\/AXComponentKit\/documentation\/AXComponentKit","kind":"symbol","type":"topic","url":"\/documentation\/axcomponentkit"},"doc://AXComponentKit/documentation/AXComponentKit/AXDynamicValue":{"role":"symbol","title":"AXDynamicValue","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AXDynamicValue"}],"abstract":[{"type":"text","text":"Defines a generic means of making any type not"},{"type":"text","text":" "},{"type":"text","text":"supported by default into a value compatible with"},{"type":"text","text":" "},{"type":"codeVoice","code":"AXDynamicComponent"}],"identifier":"doc:\/\/AXComponentKit\/documentation\/AXComponentKit\/AXDynamicValue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AXDynamicValue"}],"url":"\/documentation\/axcomponentkit\/axdynamicvalue"},"https://jubilant-disco-651a42c5.pages.github.io/testing/documentation/axcomponentkittestsupport/":{"title":"Writing tests","titleInlineContent":[{"type":"text","text":"Writing tests"}],"type":"link","identifier":"https:\/\/jubilant-disco-651a42c5.pages.github.io\/testing\/documentation\/axcomponentkittestsupport\/","url":"https:\/\/jubilant-disco-651a42c5.pages.github.io\/testing\/documentation\/axcomponentkittestsupport\/"}}}